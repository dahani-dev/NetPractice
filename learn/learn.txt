
======================== IP Address ========================

An IP address consists of 4 octets, and each octet contains 8 bits.
This gives a total of 32 bits.

Example of an IP address: 192.168.1.1
=> First octet  : 192
=> Second octet : 168
=> Third octet  : 1
=> Fourth octet : 1

============================================================


======================== IP Classes ========================

=> Class A
   - First octet range : 1 to 126
   - Subnet mask       : 255.0.0.0
   - Network part      : 1st octet
   - Host part         : last 3 octets

=> Class B
   - First octet range : 128 to 191
   - Subnet mask       : 255.255.0.0
   - Network part      : 1st and 2nd octets
   - Host part         : last 2 octets

=> Class C
   - First octet range : 192 to 223
   - Subnet mask       : 255.255.255.0
   - Network part      : 1st, 2nd, and 3rd octets
   - Host part         : 4th octet

=> Class D (Multicast)
   - First octet range : 224 to 239
   - Not used for host addressing
   - Used for multicast traffic

=> Class E (Experimental)
   - First octet range : 240 to 255
   - Reserved for research and experimental use
   - Not assigned to hosts

============================================================


=================== Extra Information ======================

If you pay attention, Class A starts from 1 to 126, and Class B starts from 128 to 191.
Why is 127 skipped?

Because the IP range 127.0.0.0 to 127.255.255.255 is reserved for **loopback** addresses.
The most common is **127.0.0.1**, which refers to **localhost** — the machine refers to itself.

============================================================


=============== Example: Network with 4 Machines ============

Let’s take an example where we have a network with 4 machines.
The network IP is: 192.168.1.0

=> Machine 1 : IP 192.168.1.1  
=> Machine 2 : IP 192.168.1.2  
=> Machine 3 : IP 192.168.1.3  
=> Machine 4 : IP 192.168.1.4  

Note:
- The address ending with `.0` is the **network address** and cannot be assigned to a host.
- The address ending with `.255` is the **broadcast address**, used to send messages to all hosts in the network.

============================================================


====================== Types of IP =========================

=> **Public IP**
   - Used to identify devices on the internet.
   - Must be unique and globally routable.
   - Assigned by ISPs or registries.

=> **Private IP**
   - Used within local/private networks.
   - Not routable on the internet.
   - Can be reused across different networks.

============================================================


====================== What is IPv4? ========================

IPv4 stands for **Internet Protocol version 4**.
- It uses 32-bit addresses (4 octets).
- Can support around **4.3 billion** unique IP addresses.

============================================================


=============== Private IP Address Ranges ==================

=> Class A : 10.0.0.0 to 10.255.255.255  
=> Class B : 172.16.0.0 to 172.31.255.255  
=> Class C : 192.168.0.0 to 192.168.255.255  

These ranges are reserved for **private networks**.

============================================================


========================= IPv6 =============================

IPv6 is the successor to IPv4 and uses **128-bit** addresses.

- Represented as 8 groups of 4 hexadecimal digits.
- Example: `2001:0db8:85a3:0000:0000:8a2e:0370:7334`
- IPv6 provides a huge address space:  
  **≈ 3.4 × 10³⁸ addresses**, enough for every device on Earth.

============================================================


========================= Exercises =========================

Exercise 1:
We have a PC with IP address: 45.110.24.10/8

- Class type of IP           : Class A
- Network Address            : 45.0.0.0/8
- Broadcast Address          : 45.255.255.255
- Maximum number of hosts    : 2^24 - 2 = 16,777,214 devices
- First usable address       : 45.0.0.1
- Last usable address        : 45.255.255.254

------------------------------------------------------------

Exercise 2:
We have a PC with IP address: 162.210.65.9/16

- Class type of IP           : Class B
- Network Address            : 162.210.0.0/16
- Broadcast Address          : 162.210.255.255
- Maximum number of hosts    : 2^16 - 2 = 65,534 devices
- First usable address       : 162.210.0.1
- Last usable address        : 162.210.255.254

------------------------------------------------------------

Exercise 3:
We have a PC with IP address: 198.145.6.29/24

- Class type of IP           : Class C
- Network Address            : 198.145.6.0/24
- Broadcast Address          : 198.145.6.255
- Maximum number of hosts    : 2^8 - 2 = 254 devices
- First usable address       : 198.145.6.1
- Last usable address        : 198.145.6.254

============================================================


============== Exercises with different CIDR ================

Exercise 1:
We have a PC with IP address: 192.168.1.64/26

- Network Address            : 192.168.1.64/26
- Subnet Mask                : 255.255.255.192
- Broadcast Address          : 192.168.1.127 (Broadcast = Network address + total IPs in the subnet - 1)
- Maximum number of hosts    : 2^6 - 2 = 62 devices
- First usable address       : 192.168.1.65
- Last usable address        : 192.168.1.126

------------------------------------------------------------

Exercise 2:
We have a PC with IP address: 192.168.1.128/26

- Network Address            : 192.168.1.128/26
- Subnet Mask                : 255.255.255.192
- Broadcast Address          : 192.168.1.191 (Broadcast = Network address + total IPs in the subnet - 1)
- Maximum number of hosts    : 2^6 - 2 = 62 devices
- First usable address       : 192.168.1.129
- Last usable address        : 192.168.1.190

------------------------------------------------------------

Exercise 3:
We have a PC with IP address: 192.168.1.130/25

- Network Address            : 192.168.1.130/25
- Subnet Mask                : 255.255.255.128
- Broadcast Address          : 192.168.1.255 (Broadcast = Network address + total IPs in the subnet - 1)
- Maximum number of hosts    : 2^7 - 2 = 126 devices
- First usable address       : 192.168.1.131
- Last usable address        : 192.168.1.254

============================================================


=================== CIDR Block Table ========================

Prefix | Block Size (IPs)     | Block Size (Decimal)        | Description
-------|----------------------|-----------------------------|-------------------------------
/1     | 2^31 = 2,147,483,648 | 128.0.0.0                   | Half the entire IPv4 space
/2     | 2^30 = 1,073,741,824 | 64.0.0.0                    | Quarter of IPv4 space
/3     | 2^29 = 536,870,912   | 32.0.0.0                    |  
/4     | 2^28 = 268,435,456   | 16.0.0.0                    |  
/5     | 2^27 = 134,217,728   | 8.0.0.0                     |  
/6     | 2^26 = 67,108,864    | 4.0.0.0                     |  
/7     | 2^25 = 33,554,432    | 2.0.0.0                     |  
/8     | 2^24 = 16,777,216    | 1.0.0.0                     | Class A default mask
/9     | 2^23 = 8,388,608     | 0.128.0.0                   |  
/10    | 2^22 = 4,194,304     | 0.64.0.0                    |  
/11    | 2^21 = 2,097,152     | 0.32.0.0                    |  
/12    | 2^20 = 1,048,576     | 0.16.0.0                    |  
/13    | 2^19 = 524,288       | 0.8.0.0                     |  
/14    | 2^18 = 262,144       | 0.4.0.0                     |  
/15    | 2^17 = 131,072       | 0.2.0.0                     |  
/16    | 2^16 = 65,536        | 0.1.0.0                     | Class B default mask
/17    | 2^15 = 32,768        | 0.0.128.0                   |  
/18    | 2^14 = 16,384        | 0.0.64.0                    |  
/19    | 2^13 = 8,192         | 0.0.32.0                    |  
/20    | 2^12 = 4,096         | 0.0.16.0                    |  
/21    | 2^11 = 2,048         | 0.0.8.0                     |  
/22    | 2^10 = 1,024         | 0.0.4.0                     |  
/23    | 2^9 = 512            | 0.0.2.0                     |  
/24    | 2^8 = 256            | 0.0.1.0                     | Class C default mask
/25    | 2^7 = 128            | 0.0.0.128                   |  
/26    | 2^6 = 64             | 0.0.0.64                    |  
/27    | 2^5 = 32             | 0.0.0.32                    |  
/28    | 2^4 = 16             | 0.0.0.16                    |  
/29    | 2^3 = 8              | 0.0.0.8                     |  
/30    | 2^2 = 4              | 0.0.0.4                     |  
/31    | 2^1 = 2              | 0.0.0.2                     | Point-to-point links
/32    | 2^0 = 1              | 0.0.0.1                     | Single IP (host address)

============================================================


============= Custom Subnetting Example 1 ===================

We have a network: 172.214.0.0/16  
Original Subnet Mask: 255.255.0.0 (binary: 11111111.11111111.00000000.00000000)  
We need at least 500 subnets.  
So, calculate: 2^9 = 512 → we need 9 extra bits.  
New prefix: /16 + 9 = **/25**  
New Subnet Mask: 255.255.255.128 (binary: 11111111.11111111.11111111.10000000)  

Block size = 256 - 128 = 128

Example Subnets:

- 1st subnet  : 172.214.0.0/25
- 2nd subnet  : 172.214.0.128/25
- 3rd subnet  : 172.214.1.0/25
- 4th subnet  : 172.214.1.128/25
- ...
- 500th subnet: 172.214.124.128/25

Formula to get any subnet:
= Network IP + (Subnet Number × Block Size)
= 172.214.0.0 + (N × 128)

============= Custom Subnetting Example 2 ===================

We have a network: 172.18.0.0/16  
Original Subnet Mask: 255.255.0.0 (binary: 11111111.11111111.00000000.00000000)  
We need at least 250 subnets.  
So, calculate: 2^8 = 256 → we need 8 extra bits.  
New prefix: /16 + 8 = **/24**  
New Subnet Mask: 255.255.255.0 (binary: 11111111.11111111.11111111.00000000)  

Block size = 256 - 0 = 256

Example Subnets:

- 1st subnet  : 172.18.0.0/24
- 2nd subnet  : 172.18.1.0/24
- 3rd subnet  : 172.18.2.0/24
- 4th subnet  : 172.18.3.0/24
- ...
- 250th subnet: 172.18.250.0/24

Formula to get any subnet:
= Network IP + (Subnet Number × Block Size)
= 172.18.0.0 + (N × 256)

============ The Magic Table Of Subnetting ==================
╭──────────┬──────┬──────┬──────┬──────┬──────┬──────┬──────┬──────╮
│ Class A  │  9   │ 10   │ 11   │ 12   │ 13   │ 14   │ 15   │ 16   │
├──────────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ Class B  │ 17   │ 18   │ 19   │ 20   │ 21   │ 22   │ 23   │ 24   │
├──────────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ Class C  │ 25   │ 26   │ 27   │ 28   │ 29   │ 30   │ 31   │ 32   │
├──────────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ Hosts    │ 128  │ 64   │ 32   │ 16   │ 8    │ 4    │ 2    │ 1    │
├──────────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┼──────┤
│ Mask     │ 128  │ 192  │ 224  │ 240  │ 248  │ 252  │ 254  │ 255  │
╰──────────┴──────┴──────┴──────┴──────┴──────┴──────┴──────┴──────╯

========================= OSI Model =========================

The OSI (Open Systems Interconnection) model is a conceptual framework
that standardizes the functions of a telecommunication or computing 
system into seven distinct layers.

1- **Application Layer**  
   - Selects the protocol for connection (HTTP, HTTPS, FTP, SMTP, etc.)
   - Interface between user and network.

2- **Presentation Layer**  
   - Format data.
   - Performs data compression.
   - Encrypts data using SSL/TLS before transmission.

3- **Session Layer**  
   - Manages sessions between systems.  
   - Handles authentication and authorization.  
   - Manages transmission modes.

4- **Transport Layer**  
   - Ensures reliable data transfer. 
   - Determines the protocol: TCP (reliable) or UDP (fast, no guarantee).  
   - Segmentation and reassembly of data.

5- **Network Layer**  
   - Adds logical addressing (IP address of sender and receiver). 
   - Forms packets.  
   - Handles routing: choosing the best path for data delivery.

6- **Data Link Layer**  
   - Adds physical addressing (MAC address of sender and receiver).  
   - Performs Frame Encapsulation for sending, and Decapsulation when received.  
   - Detects and possibly corrects errors in the physical layer.

7- **Physical Layer**  
   - Transmits raw bit stream over physical medium (cables, radio, etc.).  
   - Includes hardware like switches, cables, NICs.  
   - Responsible for voltage levels, timing, and signal transmission.

======================== TCP/IP Model ========================

The TCP/IP (Transmission Control Protocol/Internet Protocol) model 
is a simplified framework used for modern networking. It consists 
of 4 layers (sometimes described as 5), mapping roughly to the OSI model.

1- **Application Layer**  
   - Combines OSI's Application, Presentation, and Session layers.  
   - Provides services directly to the user (HTTP, FTP, SMTP, DNS, etc.).  
   - Handles data encoding, encryption, and session management.

2- **Transport Layer**  
   - Ensures end-to-end communication between devices.  
   - Protocols: TCP (reliable) and UDP (unreliable, fast).  
   - Handles segmentation, flow control, and error handling.

3- **Internet Layer**  
   - Maps to the OSI's Network layer.  
   - Responsible for logical addressing using IP (IPv4/IPv6).  
   - Handles routing and path determination (best route selection).  
   - Protocols: IP, ICMP, ARP.

4- **Network Access Layer** (also called Link or Host-to-Network)  
   - Combines OSI's Data Link and Physical layers.  
   - Handles MAC addressing and hardware-level transmission.  
   - Responsible for frame formatting, physical addressing, and media access.  
   - Protocols: Ethernet, Wi-Fi, PPP, etc.

==============================================================


